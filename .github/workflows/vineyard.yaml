name: Mars CI with Vineyard

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8]
        include:
          - { os: ubuntu-20.04, python-version: 3.6, python-abis: "cp36-cp36m", with-cython: "with Cython" }
          - { os: ubuntu-20.04, python-version: 3.7, python-abis: "cp37-cp37m", with-cython: "with Cython" }
          - { os: ubuntu-20.04, python-version: 3.8, python-abis: "cp38-cp38", with-cython: "with Cython" }

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up conda ${{ matrix.python-version }}
      env:
        PYTHON: ${{ matrix.python-version }}
      shell: bash
      run: |
        source ./.github/workflows/install-conda.sh
        python -m pip install --upgrade pip setuptools wheel coverage;

    - name: Install dependencies
      shell: bash
      run: |
        source ./.github/workflows/reload-env.sh
        export DEFAULT_VENV=$VIRTUAL_ENV

        pip install -r requirements-dev.txt
        pip install -r requirements-extra.txt
        pip install flake8
        conda list -n test

    - name: Lint with flake8
      shell: bash
      run: |
        source ./.github/workflows/reload-env.sh
        # stop the build if there are Python syntax errors or undefined names
        flake8 mars --count --select=E9,E111,E225,E302,E303,E901,E999,F7,F63,F82,F401,F821,F822,F823,F841,W291,W292,W391,W605 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 mars --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build cython extensions
      env:
        WITH_CYTHON: ${{ matrix.with-cython }}
      shell: bash
      run: |
        source ./.github/workflows/reload-env.sh
        if [ -z "$WITH_CYTHON" ]; then
          for cf in `ls .coveragerc*`; do
            sed -i.bak "s/plugins *= *Cython\.Coverage//g" $cf;
            sed -i.bak -e '/*\.pxd/ a\
            \ \ \ \ *.pyx \
            ' $cf
          done
        else
          export CYTHON_TRACE=1
          for cf in `ls .coveragerc*`; do
            sed -i.bak -e '/*\.pxd/ a\
            \ \ \ \ *.py \
            ' $cf
          done
        fi
        retry python setup.py build_ext -i -j 2
        pip install -e ".[dev]"

    - name: Get vineyard runtime
      shell: bash
      run: |
        sudo docker pull libvineyard/vineyardd:latest
        pip3 install vineyard

    - name: Launch vineyard
      shell: bash
      run: |
        sudo docker run --rm -d --name vineyard -v /tmp/vineyard:/var/run libvineyard/vineyardd:latest
        sudo chmod a+wrx /tmp/vineyard/vineyard.sock

    - name: Test with pytest
      env:
        WITH_VINEYARD: true
      shell: bash
      run: |
        sudo docker run --rm -d --name vineyard -v /tmp/vineyard:/var/run libvineyard/vineyardd:latest
        sudo chmod a+wrx /tmp/vineyard/vineyard.sock

        source ./.github/workflows/reload-env.sh
        source ./.github/workflows/run-tests.sh

    - name: Stop vineyard
      if: ${{ always() }}
      shell: bash
      run: |
        sudo docker stop vineyard
